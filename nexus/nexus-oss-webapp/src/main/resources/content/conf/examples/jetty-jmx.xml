<?xml version="1.0"?>
<!--

    Copyright (c) 2008-2011 Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions

    This program is free software: you can redistribute it and/or modify it only under the terms of the GNU Affero General
    Public License Version 3 as published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
    warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License Version 3
    for more details.

    You should have received a copy of the GNU Affero General Public License Version 3 along with this program.  If not, see
    http://www.gnu.org/licenses.

    Sonatype Nexus (TM) Open Source Version is available from Sonatype, Inc. Sonatype and Sonatype Nexus are trademarks of
    Sonatype, Inc. Apache Maven is a trademark of the Apache Foundation. M2Eclipse is a trademark of the Eclipse Foundation.
    All other trademarks are the property of their respective owners.

-->
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">

<!-- ============================================================================ -->
<!-- To correctly start Jetty with JMX module enabled, this configuration         -->
<!-- file must appear first in the list of the configuration files.               -->
<!-- The simplest way to achieve this is to add etc/jetty-jmx.xml as the          -->
<!-- first file in configuration file list at the end of start.ini file.          -->
<!-- ============================================================================ -->
<Configure id="Server" class="org.eclipse.jetty.server.Server">

  <!-- =========================================================== -->
  <!-- Initialize an mbean server                                  -->
  <!-- =========================================================== -->
  <Call id="MBeanServer" class="java.lang.management.ManagementFactory"
    name="getPlatformMBeanServer" />

  <!-- =========================================================== -->
  <!-- Initialize the Jetty MBean container                        -->
  <!-- =========================================================== -->
  <New id="MBeanContainer" class="org.eclipse.jetty.jmx.MBeanContainer">
    <Arg>
      <Ref id="MBeanServer" />
    </Arg>
  </New>

  <!-- Add to the Server to listen for object events -->
  <Get id="Container" name="container">
    <Call name="addEventListener">
      <Arg>
        <Ref id="MBeanContainer" />
      </Arg>
    </Call>
  </Get>

  <!-- Add to the Server as a lifecycle -->
  <!-- Only do this if you know you will only have a single jetty server -->
  <Call name="addBean">
    <Arg>
      <Ref id="MBeanContainer" />
    </Arg>
  </Call>

  <!-- Add the static log -->
  <Get id="Logger" class="org.eclipse.jetty.util.log.Log" name="log" />
  <Ref id="MBeanContainer">
    <Call name="addBean">
      <Arg>
        <Ref id="Logger" />
      </Arg>
    </Call>
  </Ref>
  
  <!-- In order to connect to the JMX server remotely from a different
       process, possibly running on a different host, Jetty JMX module
       can create a remote JMX connector. It requires RMI registry to
       be started prior to creating the connector server because the
       JMX specification uses RMI to facilitate connections.        
   -->

  <!-- Optionally start the RMI registry. Normally RMI registry runs on
       port 1099. The argument below can be changed in order to comply
       with the firewall requirements.
  -->
  <!--
  <Call name="createRegistry" class="java.rmi.registry.LocateRegistry">
    <Arg type="java.lang.Integer">1099</Arg>
    <Call name="sleep" class="java.lang.Thread">
       <Arg type="java.lang.Integer">1000</Arg>
    </Call>
  </Call>
  -->
 
  <!-- Optionally add a remote JMX connector. The parameters of the constructor
       below specify the JMX service URL, and the object name string for the
       connector server bean. The parameters of the JMXServiceURL constructor 
       specify the protocol that clients will use to connect to the remote JMX
       connector (RMI), the hostname of the server (local hostname), port number
       (automatically assigned), and the URL path. Note that URL path contains
       the RMI registry hostname and port number, that may need to be modified
       in order to comply with the firewall requirements. 
  -->
  <!--
  <New id="ConnectorServer" class="org.eclipse.jetty.jmx.ConnectorServer">
    <Arg>
      <New class="javax.management.remote.JMXServiceURL">
        <Arg type="java.lang.String">rmi</Arg>
        <Arg type="java.lang.String" />
        <Arg type="java.lang.Integer">0</Arg>
        <Arg type="java.lang.String">/jndi/rmi://localhost:1099/jettyjmx</Arg>
      </New>
    </Arg>
    <Arg>org.eclipse.jetty:name=rmiconnectorserver</Arg>
    <Call name="start" />
  </New>
  -->
</Configure>

