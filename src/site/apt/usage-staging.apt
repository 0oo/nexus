  ---
  Nexus Plugin for Maven: Working with the Staging Suite
  ---
  John Casey
  ---
  April 2, 2009
  ---

Plugin Usage: Working with the Nexus Professional Staging Suite

  Nexus Professional provides a feature called the {{{http://www.sonatype.com/products/nexus/overview/features/staging}Staging Suite}}, which allows developers to deploy sets of
  artifacts to unique, isolated repositories for testing. When all artifacts for a prospective release have been deployed, the repository can be sealed, providing a convenient
  single location that houses the complete set of artifacts for the proposed release. Once the artifacts are tested, the repository as a whole can be promoted into a permanent 
  repository to finalize the release for general consumption, or dropped to make room for another attempt.
  
  The Nexus Plugin for Maven gives you access to this feature from the Maven command line.

* Listing Your Open Staging Repositories

  Once you've deployed one or more sets of artifacts as release candidate to Nexus, you'll have one or more open staging repositories. There are a variety of actions you can take with
  these repositories, but maybe one of the most basic is to list them. This gives you a pretty good view into the status of your release(s).

  The basic command is:
  
+---+
mvn nexus:staging-list
+---+

  and the console output will look something like this:
  
+---+
[...]
[INFO] Logging into Nexus: http://localhost:8082/nexus
[INFO] User: testuser
[INFO] 


[INFO] The following OPEN staging repositories were found: 

-  staging-003 (profile: 112cc490b91265a1)
   URL:http://localhost:8082/nexus/content/repositories/staging-003


[INFO] The following FINISHED staging repositories were found: 

-  staging-001 (profile: 112cc490b91265a1)
   URL:http://localhost:8082/nexus/content/repositories/staging-001
   
-  staging-002 (profile: 112cc490b91265a1)
   URL:http://localhost:8082/nexus/content/repositories/staging-002
+---+

** TIP: Required Information

  In order to access the staging suite in your Nexus instance, the plugin must be told where Nexus is. Additionally, in most cases a valid user login will be required to access your 
  relevant staging information. By default, if you don't specify the <<<nexusURL>>> and <<<password>>> parameters, the plugin will prompt you for them. If you don't specify the
  <<<username>>> parameter, the Java System property <<<$\{user.name\}>>> will be used.
  
  For example:
  
+---+
[...]
Nexus URL: http://localhost:8082/nexus
Password: ********
[...]
+---+

** TIP: Using your existing <<<settings.xml>>> configuration to authenticate against Nexus

  If you've already configured Maven to authenticate your access to Nexus in order to resolve artifacts, you can reuse this configuration when interacting with Nexus' other functions.
  Simply reference the <<<server>>> entry id from your <<<settings.xml>>> file, like this:
  
+---+
mvn nexus:staging-list -DserverAuthId=my.nexus
+---+

  If you watch the console output, you should see the following:
  
+---+
[...]
[INFO] Using authentication information for server: 'my.nexus'.
[...]
+---+

  On the other hand, if the specified <<<server>>> entry doesn't exist, you'll see the following instead:
  
+---+
[...]
[WARN] Server authentication entry not found for: 'my.nexus'.
[...]
+---+

* Finishing an Open Staging Repository for Your Project

  Before your team can run any tests against the set of artifacts that constitute your release, you need to mark the open staging repository as <<finished>>. This means that no additional
  artifacts can be added to that specific staging repository, making the set of artifacts it contains an immutable snapshot. When it is finished, the repository will become available for
  artifact resolution.

  The basic command is:

+---+
mvn nexus:finish
+---+

  If you have an open staging repository that matches the profile rules for the current project, you'll see something like the following in the console output:
  
+---+
[INFO] Finishing staging repository for: 'com.myco:my-project:1':

-  staging-002 (profile: 112cc490b91265a1)
   URL: http://localhost:8082/nexus/content/repositories/staging-002


[INFO] The following FINISHED staging repositories were found for: 'com.myco:my-project:1':

-  staging-001 (profile: 112cc490b91265a1)
   URL:http://localhost:8082/nexus/content/repositories/staging-001
   
-  staging-002 (profile: 112cc490b91265a1)
   URL: http://localhost:8082/nexus/content/repositories/staging-002
+---+

  The output above shows that the <<<staging-finish>>> mojo found an open staging repository - <<<staging-001>>> - for the current project, then told Nexus to finish it. Afterward, 
  it displayed the list of finished staging repositories, which included the one we just finished. 
  
  If you don't have an open staging repository, you'll see something like this instead:
  
+---+
No open staging repositories found. Nothing to do!


[INFO] The following FINISHED staging repositories were found for: 'com.myco:my-project:1':

-  staging-001 (profile: 112cc490b91265a1)
   URL:http://localhost:8082/nexus/content/repositories/staging-001
   
-  staging-002 (profile: 112cc490b91265a1)
   URL: http://localhost:8082/nexus/content/repositories/staging-002
+---+

